{"ast":null,"code":"var _jsxFileName = \"/Users/sherifbutt/Library/Mobile Documents/com~apple~CloudDocs/WORK/learning code/js/react/react-task-tracker/src/App.js\",\n    _s = $RefreshSig$();\n\n// import LIBRARIES\nimport { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { useTransition } from \"react-spring\"; // import COMPONANTS\n\nimport Header from \"./componenets/Header\";\nimport Tasks from \"./componenets/Tasks\";\nimport AddTask from \"./componenets/AddTask\";\nimport Footer from \"./componenets/Footer\";\nimport About from \"./componenets/About\"; // App COMPONENT\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  _s();\n\n  // STATE\n  const [tasks, setTasks] = useState([]);\n  const [showAddTaskForm, setShowAddTaskForm] = useState(false); // ANIMATIONS\n\n  const transition = useTransition(showAddTaskForm, {});\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n\n    getTasks();\n  }, []); //REST\n  // fetch Tasks\n\n  const fetchTasks = async () => {\n    try {\n      const res = await fetch(\"http://localhost:5000/tasks\", {\n        method: \"GET\"\n      });\n      const data = await res.json();\n      return data;\n    } catch (err) {\n      console.error(\"Error featch tasks: \", err);\n    }\n  }; // fetch one Task\n\n\n  const fetchTask = async id => {\n    try {\n      const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n        method: \"GET\"\n      });\n      const data = await res.json();\n      return data;\n    } catch (err) {\n      console.error(`Error featch task [${id}]:`, err);\n    }\n  }; // Update data\n\n\n  const updateData = async (id, data) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n  }; // Delete Task\n\n\n  const deleteTask = async id => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: \"DELETE\"\n    });\n    setTasks(tasks.filter(task => task.id !== id));\n  }; // Post all tasks\n\n\n  const saveTasks = async tasks => {\n    await fetch(\"http://localhost:5000/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(tasks)\n    });\n  }; // Save reorderd Tasks to Server\n\n\n  const saveReorderdTasks = async (srcI, disI) => {\n    await fetch(`http://localhost:5000/tasks/?srcI=${srcI}&disI=${disI}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n  }; // const saveReorderdTasks = async (_tasks,srcI,disI) => {\n  //   await fetch(\"http://localhost:5000/reordertasks/\", {\n  //     method: \"POST\",\n  //     headers: {\n  //       \"Content-Type\": \"application/json\"\n  //     },\n  //     body: JSON.stringify({tasks:_tasks})\n  //   });\n  //   setTasks(_tasks);\n  // }\n  // Toggle reminder\n\n\n  const toggleReminder = async id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n    const taskToChange = await fetchTask(id);\n    const changedTask = await { ...taskToChange,\n      reminder: !taskToChange.reminder\n    };\n    updateData(id, changedTask);\n  }; // Add Task\n\n\n  const addTask = async task => {\n    const res = await fetch(\"http://localhost:5000/tasks/\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify(task)\n    });\n    const data = await res.json();\n    setTasks([...tasks, data]); // const newTask = { id: tasks.length + 1, ...task };\n    // setTasks([...tasks, newTask]);\n  }; //Edit Task text\n\n\n  const editTask = async payload => {\n    // Fetch tasks\n    const tasks = await fetchTasks(); // Fetch oldTaskInfo\n    //const oldTaskInfo = await fetchTask(payload.id)//\n    //  console.log('-->',payload,oldTaskInfo);\n    // Replace oldTaskInfo with newTaskInfo\n\n    const newTasks = tasks.map(task => payload.id === task.id ? { ...task,\n      text: payload.text\n    } : task);\n    setTasks(newTasks);\n    console.log(newTasks); // Update Tasks state with newTaskInfo\n    // PUT newTaskInfo to server\n\n    updateData(payload.id, payload);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        showAddTaskForm: showAddTaskForm,\n        toggleAddTaskForm: () => setShowAddTaskForm(!showAddTaskForm),\n        transition: transition\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        render: props => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [transition(st) && /*#__PURE__*/_jsxDEV(AddTask, {\n            addTask: addTask,\n            showAddTaskForm: showAddTaskForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 17\n          }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n            tasks: tasks,\n            setTasks: setTasks,\n            deleteTask: deleteTask,\n            toggleReminder: toggleReminder,\n            editTask: editTask,\n            saveTasks: saveTasks,\n            saveReorderdTasks: saveReorderdTasks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task\",\n            style: {\n              backgroundColor: \"white\"\n            },\n            children: \"Sorry.. No tasks to show!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        component: About\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"/Qi93C3V1rfRfCvoOjJM1pumaOc=\", false, function () {\n  return [useTransition];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sherifbutt/Library/Mobile Documents/com~apple~CloudDocs/WORK/learning code/js/react/react-task-tracker/src/App.js"],"names":["useState","useEffect","BrowserRouter","Router","Route","useTransition","Header","Tasks","AddTask","Footer","About","App","props","tasks","setTasks","showAddTaskForm","setShowAddTaskForm","transition","getTasks","tasksFromServer","fetchTasks","res","fetch","method","data","json","err","console","error","fetchTask","id","updateData","headers","body","JSON","stringify","deleteTask","filter","task","saveTasks","saveReorderdTasks","srcI","disI","toggleReminder","map","reminder","taskToChange","changedTask","addTask","editTask","payload","newTasks","text","log","st","length","backgroundColor"],"mappings":"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","sourcesContent":["// import LIBRARIES\nimport { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { useTransition } from \"react-spring\"\n\n// import COMPONANTS\nimport Header from \"./componenets/Header\";\nimport Tasks from \"./componenets/Tasks\";\nimport AddTask from \"./componenets/AddTask\";\nimport Footer from \"./componenets/Footer\";\nimport About from \"./componenets/About\";\n\n// App COMPONENT\nfunction App(props) {\n  // STATE\n  const [tasks, setTasks] = useState([]);\n  const [showAddTaskForm, setShowAddTaskForm] = useState(false);\n  \n  // ANIMATIONS\n  const transition = useTransition(showAddTaskForm, {});\n  \n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n    getTasks();\n  }, []);\n\n  //REST\n  // fetch Tasks\n  const fetchTasks = async () => {\n    try {\n      const res = await fetch(\"http://localhost:5000/tasks\", { method: \"GET\" });\n      const data = await res.json();\n      return data;\n    } catch (err) {\n      console.error(\"Error featch tasks: \", err);\n    }\n  };\n\n  // fetch one Task\n  const fetchTask = async (id) => {\n    try {\n      const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n        method: \"GET\",\n      });\n      const data = await res.json();\n      return data;\n    } catch (err) {\n      console.error(`Error featch task [${id}]:`, err);\n    }\n  };\n\n  // Update data\n  const updateData = async (id, data) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n  };\n\n  // Delete Task\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, { method: \"DELETE\" });\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  // Post all tasks\n  const saveTasks = async (tasks) => {\n    await fetch(\"http://localhost:5000/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(tasks),\n    });\n  };\n\n  // Save reorderd Tasks to Server\n  const saveReorderdTasks = async (srcI, disI) => {\n    await fetch(`http://localhost:5000/tasks/?srcI=${srcI}&disI=${disI}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n  };\n  // const saveReorderdTasks = async (_tasks,srcI,disI) => {\n  //   await fetch(\"http://localhost:5000/reordertasks/\", {\n  //     method: \"POST\",\n  //     headers: {\n  //       \"Content-Type\": \"application/json\"\n  //     },\n  //     body: JSON.stringify({tasks:_tasks})\n  //   });\n  //   setTasks(_tasks);\n  // }\n\n  // Toggle reminder\n  const toggleReminder = async (id) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: !task.reminder } : task\n      )\n    );\n\n    const taskToChange = await fetchTask(id);\n    const changedTask = await {\n      ...taskToChange,\n      reminder: !taskToChange.reminder,\n    };\n\n    updateData(id, changedTask);\n  };\n\n  // Add Task\n  const addTask = async (task) => {\n    const res = await fetch(\"http://localhost:5000/tasks/\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify(task),\n    });\n    const data = await res.json();\n    setTasks([...tasks, data]);\n\n    // const newTask = { id: tasks.length + 1, ...task };\n    // setTasks([...tasks, newTask]);\n  };\n\n  //Edit Task text\n  const editTask = async (payload) => {\n    // Fetch tasks\n    const tasks = await fetchTasks();\n    // Fetch oldTaskInfo\n    //const oldTaskInfo = await fetchTask(payload.id)//\n    //  console.log('-->',payload,oldTaskInfo);\n    // Replace oldTaskInfo with newTaskInfo\n\n    const newTasks = tasks.map((task) =>\n      payload.id === task.id ? { ...task, text: payload.text } : task\n    );\n    setTasks(newTasks);\n    console.log(newTasks);\n\n    // Update Tasks state with newTaskInfo\n    // PUT newTaskInfo to server\n    updateData(payload.id, payload);\n  };\n\n  return (\n    <Router>\n      <div className=\"container\">\n        <Header\n          showAddTaskForm={showAddTaskForm}\n          toggleAddTaskForm={() => setShowAddTaskForm(!showAddTaskForm)}\n          transition={transition}\n        />\n\n        <Route\n          path=\"/\"\n          exact\n          render={(props) => (\n            <>\n              {transition((st)) && (\n                <AddTask addTask={addTask} showAddTaskForm={showAddTaskForm} />\n              )}\n\n              {tasks.length > 0 ? (\n                <Tasks\n                  tasks={tasks}\n                  setTasks={setTasks}\n                  deleteTask={deleteTask}\n                  toggleReminder={toggleReminder}\n                  editTask={editTask}\n                  saveTasks={saveTasks}\n                  saveReorderdTasks={saveReorderdTasks}\n                />\n              ) : (\n                <div className=\"task\" style={{ backgroundColor: \"white\" }}>\n                  Sorry.. No tasks to show!\n                </div>\n              )}\n            </>\n          )}\n        />\n        <Route path=\"/about\" component={About} />\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}