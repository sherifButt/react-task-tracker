{"ast":null,"code":"var _jsxFileName = \"/Users/sherifbutt/Library/Mobile Documents/com~apple~CloudDocs/WORK/learning code/js/react/react-task-tracker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Header from \"./componenets/Header\";\nimport Tasks from \"./componenets/Tasks\";\nimport AddTask from \"./componenets/AddTask\";\nimport Footer from \"./componenets/Footer\";\nimport About from \"./componenets/About\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  const [showAddTaskForm, setShowAddTaskForm] = useState(false);\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n\n    getTasks();\n  }, []); //REST\n  // fetch Tasks\n\n  const fetchTasks = async () => {\n    const res = await fetch(\"http://localhost:5000/tasks\", {\n      method: 'GET'\n    });\n    const data = await res.json();\n    return data;\n  }; // fetch Task\n\n\n  const fetchTask = async id => {\n    const res = await fetch(`http://localhost:8000/tasks/${id}`, {\n      method: \"GET\"\n    });\n    const data = await res.json();\n    return data;\n  }; // Update data\n\n\n  const updateData = async (id, data) => {\n    await fetch(`http://localhost:8000/tasks/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n  }; // Delete Task\n\n\n  const deleteTask = async id => {\n    await fetch(`http://localhost:8000/tasks/${id}`, {\n      method: \"DELETE\"\n    });\n    setTasks(tasks.filter(task => task.id !== id));\n  }; // Post all tasks\n\n\n  const saveTasks = async tasks => {\n    await fetch('http://localhost:8000/', {\n      method: 'POST',\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(tasks)\n    });\n  }; // Save reorderd Tasks to Server\n\n\n  const saveReorderdTasks = async tasks => {\n    await fetch(\"http://localhost:5000/reordertasks/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(tasks)\n    });\n  }; // Toggle reminder\n\n\n  const toggleReminder = async id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n    const taskToChange = await fetchTask(id);\n    const changedTask = await { ...taskToChange,\n      reminder: !taskToChange.reminder\n    };\n    updateData(id, changedTask);\n  }; // Add Task\n\n\n  const addTask = async task => {\n    const res = await fetch(\"http://localhost:8000/tasks\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify(task)\n    });\n    const data = await res.json();\n    setTasks([...tasks, data]); // const newTask = { id: tasks.length + 1, ...task };\n    // setTasks([...tasks, newTask]);\n  }; //Edit Task text\n\n\n  const editTask = async payload => {\n    // Fetch tasks\n    const tasks = await fetchTasks(); // Fetch oldTaskInfo\n    //const oldTaskInfo = await fetchTask(payload.id)//\n    //  console.log('-->',payload,oldTaskInfo);\n    // Replace oldTaskInfo with newTaskInfo\n\n    const newTasks = tasks.map(task => payload.id === task.id ? { ...task,\n      text: payload.text\n    } : task);\n    setTasks(newTasks);\n    console.log(newTasks); // Update Tasks state with newTaskInfo\n    // PUT newTaskInfo to server\n\n    updateData(payload.id, payload);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        showAddTaskForm: showAddTaskForm,\n        toggleAddTaskForm: () => setShowAddTaskForm(!showAddTaskForm)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        render: props => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [showAddTaskForm && /*#__PURE__*/_jsxDEV(AddTask, {\n            addTask: addTask,\n            showAddTaskForm: showAddTaskForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n            tasks: tasks,\n            setTasks: setTasks,\n            deleteTask: deleteTask,\n            toggleReminder: toggleReminder,\n            editTask: editTask,\n            saveTasks: saveTasks,\n            saveReorderdTasks: saveReorderdTasks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task\",\n            style: {\n              backgroundColor: \"white\"\n            },\n            children: \"Sorry.. No tasks to show!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        component: About\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ohuU7wK2WB9wRWCpYgjhUwcyLzY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sherifbutt/Library/Mobile Documents/com~apple~CloudDocs/WORK/learning code/js/react/react-task-tracker/src/App.js"],"names":["useState","useEffect","BrowserRouter","Router","Route","Header","Tasks","AddTask","Footer","About","App","props","tasks","setTasks","showAddTaskForm","setShowAddTaskForm","getTasks","tasksFromServer","fetchTasks","res","fetch","method","data","json","fetchTask","id","updateData","headers","body","JSON","stringify","deleteTask","filter","task","saveTasks","saveReorderdTasks","toggleReminder","map","reminder","taskToChange","changedTask","addTask","editTask","payload","newTasks","text","console","log","length","backgroundColor"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport Header from \"./componenets/Header\";\nimport Tasks from \"./componenets/Tasks\";\nimport AddTask from \"./componenets/AddTask\";\nimport Footer from \"./componenets/Footer\";\nimport About from \"./componenets/About\";\n\nfunction App(props) {\n  const [tasks, setTasks] = useState([]);\n  const [showAddTaskForm, setShowAddTaskForm] = useState(false);\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n    getTasks();\n  }, []);\n\n  //REST\n  // fetch Tasks\n  const fetchTasks = async () => {\n    const res = await fetch(\"http://localhost:5000/tasks\",{method:'GET'});\n    const data = await res.json();\n\n    return data;\n  };\n\n  // fetch Task\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:8000/tasks/${id}`, {\n      method: \"GET\",\n    });\n    const data = await res.json();\n    return data;\n  };\n\n  // Update data\n  const updateData = async (id, data) => {\n    await fetch(`http://localhost:8000/tasks/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n  };\n\n  // Delete Task\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:8000/tasks/${id}`, { method: \"DELETE\" });\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  // Post all tasks\n  const saveTasks = async(tasks) => {\n    await fetch('http://localhost:8000/', {\n      method: 'POST',\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(tasks)\n    })\n  }\n\n  // Save reorderd Tasks to Server\n  const saveReorderdTasks = async (tasks) => {\n    await fetch(\"http://localhost:5000/reordertasks/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(tasks)\n    });\n  }\n\n  // Toggle reminder\n  const toggleReminder = async (id) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: !task.reminder } : task\n      )\n    );\n\n    const taskToChange = await fetchTask(id);\n\n    const changedTask = await {\n      ...taskToChange,\n      reminder: !taskToChange.reminder,\n    };\n\n    updateData(id, changedTask);\n  };\n\n  // Add Task\n  const addTask = async (task) => {\n    const res = await fetch(\"http://localhost:8000/tasks\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify(task),\n    });\n    const data = await res.json();\n    setTasks([...tasks, data]);\n\n    // const newTask = { id: tasks.length + 1, ...task };\n    // setTasks([...tasks, newTask]);\n  };\n\n  //Edit Task text\n  const editTask =async (payload) => {\n    // Fetch tasks\n    const tasks = await fetchTasks()\n    // Fetch oldTaskInfo\n     //const oldTaskInfo = await fetchTask(payload.id)//\n    //  console.log('-->',payload,oldTaskInfo);\n    // Replace oldTaskInfo with newTaskInfo\n     \n     const newTasks= tasks.map(task =>  payload.id === task.id ? {...task, text: payload.text}:task)\n     setTasks(newTasks)\n    console.log(newTasks);\n    \n    // Update Tasks state with newTaskInfo\n    // PUT newTaskInfo to server\n    updateData(payload.id,payload)\n  }\n\n  return (\n    <Router>\n      <div className=\"container\">\n        <Header\n          showAddTaskForm={showAddTaskForm}\n          toggleAddTaskForm={() => setShowAddTaskForm(!showAddTaskForm)}\n        />\n\n        <Route\n          path=\"/\"\n          exact\n          render={(props) => (\n            <>\n              {showAddTaskForm && (\n                <AddTask addTask={addTask} showAddTaskForm={showAddTaskForm} />\n              )}\n\n              {tasks.length > 0 ? (\n                <Tasks\n                  tasks={tasks}\n                  setTasks={setTasks}\n                  deleteTask={deleteTask}\n                  toggleReminder={toggleReminder}\n                  editTask={editTask}\n                  saveTasks={saveTasks}\n                  saveReorderdTasks={saveReorderdTasks}\n                />\n              ) : (\n                <div className=\"task\" style={{ backgroundColor: \"white\" }}>\n                  Sorry.. No tasks to show!\n                </div>\n              )}\n            </>\n          )}\n        />\n        <Route path=\"/about\" component={About} />\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}