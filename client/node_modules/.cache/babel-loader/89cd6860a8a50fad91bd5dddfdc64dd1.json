{"ast":null,"code":"var _jsxFileName = \"/Users/sherifbutt/Library/Mobile Documents/com~apple~CloudDocs/WORK/learning code/js/react/react-task-tracker/src/componenets/Tasks.js\";\nimport TaskSwitch from \"./TaskSwitch\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tasks = ({\n  tasks,\n  setTasks,\n  deleteTask,\n  toggleReminder,\n  editTask,\n  saveTasks,\n  saveReorderdTasks\n}) => {\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: param => {\n      const srcI = param.source.index;\n      const disI = param.destination.index; // [1,2,3,4,5]\n      // tasks.splice(srcI,1,disT)\n\n      tasks.splice(disI, 0, tasks.splice(srcI, 1)[0]);\n      setTasks(tasks);\n      saveReorderdTasks(tasks);\n      console.log(tasks);\n    },\n    children: /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: \"droppable-1\",\n      type: \"TASK\",\n      children: (provided, _) => /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: provided.innerRef // style={{\n        //   backgroundColor: snapshot.isDraggingOver ? \"blue\" : \"grey\",\n        // }}\n        ,\n        ...provided.droppableProps,\n        children: [tasks.map((task, i) => /*#__PURE__*/_jsxDEV(Draggable, {\n          draggableId: \"draggable-\" + task.id,\n          index: i,\n          children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            ...provided.draggableProps,\n            ...provided.dragHandleProps,\n            children: /*#__PURE__*/_jsxDEV(TaskSwitch, {\n              task: task,\n              deleteTask: deleteTask,\n              toggleReminder: toggleReminder,\n              editTask: editTask\n            }, task.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 19\n          }, this)\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this)), provided.placeholder]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["/Users/sherifbutt/Library/Mobile Documents/com~apple~CloudDocs/WORK/learning code/js/react/react-task-tracker/src/componenets/Tasks.js"],"names":["TaskSwitch","DragDropContext","Droppable","Draggable","Tasks","tasks","setTasks","deleteTask","toggleReminder","editTask","saveTasks","saveReorderdTasks","param","srcI","source","index","disI","destination","splice","console","log","provided","_","innerRef","droppableProps","map","task","i","id","snapshot","draggableProps","dragHandleProps","placeholder"],"mappings":";AAAA,OAAOA,UAAP,MAAuB,cAAvB;AACA,SAASC,eAAT,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,qBAAtD;;;AACA,MAAMC,KAAK,GAAG,CAAC;AACbC,EAAAA,KADa;AAEbC,EAAAA,QAFa;AAGbC,EAAAA,UAHa;AAIbC,EAAAA,cAJa;AAKbC,EAAAA,QALa;AAMbC,EAAAA,SANa;AAObC,EAAAA;AAPa,CAAD,KAQR;AACJ,sBACE,QAAC,eAAD;AACE,IAAA,SAAS,EAAGC,KAAD,IAAW;AACpB,YAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAA1B;AACA,YAAMC,IAAI,GAAGJ,KAAK,CAACK,WAAN,CAAkBF,KAA/B,CAFoB,CAIpB;AACA;;AACAV,MAAAA,KAAK,CAACa,MAAN,CAAaF,IAAb,EAAmB,CAAnB,EAAsBX,KAAK,CAACa,MAAN,CAAaL,IAAb,EAAmB,CAAnB,EAAsB,CAAtB,CAAtB;AACAP,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACAM,MAAAA,iBAAiB,CAACN,KAAD,CAAjB;AACAc,MAAAA,OAAO,CAACC,GAAR,CAAYf,KAAZ;AACD,KAXH;AAAA,2BAaE,QAAC,SAAD;AAAW,MAAA,WAAW,EAAC,aAAvB;AAAqC,MAAA,IAAI,EAAC,MAA1C;AAAA,gBACG,CAACgB,QAAD,EAAWC,CAAX,kBACC;AACE,QAAA,GAAG,EAAED,QAAQ,CAACE,QADhB,CAEE;AACA;AACA;AAJF;AAAA,WAKMF,QAAQ,CAACG,cALf;AAAA,mBAOGnB,KAAK,CAACoB,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,kBACT,QAAC,SAAD;AAEE,UAAA,WAAW,EAAE,eAAeD,IAAI,CAACE,EAFnC;AAGE,UAAA,KAAK,EAAED,CAHT;AAAA,oBAKG,CAACN,QAAD,EAAWQ,QAAX,kBACC;AACE,YAAA,GAAG,EAAER,QAAQ,CAACE,QADhB;AAAA,eAEMF,QAAQ,CAACS,cAFf;AAAA,eAGMT,QAAQ,CAACU,eAHf;AAAA,mCAYE,QAAC,UAAD;AAEE,cAAA,IAAI,EAAEL,IAFR;AAGE,cAAA,UAAU,EAAEnB,UAHd;AAIE,cAAA,cAAc,EAAEC,cAJlB;AAKE,cAAA,QAAQ,EAAEC;AALZ,eACOiB,IAAI,CAACE,EADZ;AAAA;AAAA;AAAA;AAAA;AAZF;AAAA;AAAA;AAAA;AAAA;AANJ,WACOF,IAAI,CAACE,EADZ;AAAA;AAAA;AAAA;AAAA,gBADD,CAPH,EAqCGP,QAAQ,CAACW,WArCZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AAbF;AAAA;AAAA;AAAA;AAAA,UADF;AA2DD,CApED;;KAAM5B,K;AAsEN,eAAeA,KAAf","sourcesContent":["import TaskSwitch from \"./TaskSwitch\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nconst Tasks = ({\n  tasks,\n  setTasks,\n  deleteTask,\n  toggleReminder,\n  editTask,\n  saveTasks,\n  saveReorderdTasks,\n}) => {\n  return (\n    <DragDropContext\n      onDragEnd={(param) => {\n        const srcI = param.source.index;\n        const disI = param.destination.index;\n\n        // [1,2,3,4,5]\n        // tasks.splice(srcI,1,disT)\n        tasks.splice(disI, 0, tasks.splice(srcI, 1)[0]);\n        setTasks(tasks);\n        saveReorderdTasks(tasks);\n        console.log(tasks);\n      }}\n    >\n      <Droppable droppableId=\"droppable-1\" type=\"TASK\">\n        {(provided, _) => (\n          <div\n            ref={provided.innerRef}\n            // style={{\n            //   backgroundColor: snapshot.isDraggingOver ? \"blue\" : \"grey\",\n            // }}\n            {...provided.droppableProps}\n          >\n            {tasks.map((task, i) => (\n              <Draggable\n                key={task.id}\n                draggableId={\"draggable-\" + task.id}\n                index={i}\n              >\n                {(provided, snapshot) => (\n                  <div\n                    ref={provided.innerRef}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    // style={{\n                    //   ...provided.draggableProps.style,\n                    //   boxShadow: snapshot.isDragging\n                    //     ? \"2px 2px 10px #666\"\n                    //     : \"none\",\n                    //   borderRadius: snapshot.isDragging ? \"5px\" : \"none\",\n                    // }}\n                  >\n                    <TaskSwitch\n                      key={task.id}\n                      task={task}\n                      deleteTask={deleteTask}\n                      toggleReminder={toggleReminder}\n                      editTask={editTask}\n                    />\n                  </div>\n                )}\n              </Draggable>\n            ))}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n};\n\nexport default Tasks;\n"]},"metadata":{},"sourceType":"module"}