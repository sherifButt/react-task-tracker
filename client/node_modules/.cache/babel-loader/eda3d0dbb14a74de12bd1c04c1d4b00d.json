{"ast":null,"code":"import _objectSpread from\"/Users/sherifbutt/Library/Mobile Documents/com~apple~CloudDocs/WORK/learning code/js/react/react-task-tracker-client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import TaskSwitch from\"./TaskSwitch\";import{v4 as uuidv4}from\"uuid\";import{DragDropContext,Droppable,Draggable}from\"react-beautiful-dnd\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Tasks=function Tasks(_ref){var tasks=_ref.tasks,setTasks=_ref.setTasks,deleteTask=_ref.deleteTask,toggleReminder=_ref.toggleReminder,editTask=_ref.editTask,saveTasks=_ref.saveTasks,saveReorderdTasks=_ref.saveReorderdTasks;return/*#__PURE__*/_jsx(DragDropContext,{onDragEnd:function onDragEnd(param){if(param.destination){var srcI=param.source.index;var disI=param.destination.index;// tasks.splice(srcI,1,disT)\ntasks.splice(disI,0,tasks.splice(srcI,1)[0]);saveReorderdTasks(srcI,disI);setTasks(tasks);console.log(tasks);}},children:/*#__PURE__*/_jsx(Droppable,{droppableId:\"droppable-1\",type:\"TASK\",children:function children(provided,_){return/*#__PURE__*/_jsxs(\"div\",_objectSpread(_objectSpread({ref:provided.innerRef// style={{\n//   backgroundColor: snapshot.isDraggingOver ? \"blue\" : \"grey\",\n// }}\n},provided.droppableProps),{},{children:[tasks.map(function(task,i){return/*#__PURE__*/_jsx(Draggable,{draggableId:\"draggable-\"+task.id,index:i,children:function children(provided,snapshot){return/*#__PURE__*/_jsx(\"div\",_objectSpread(_objectSpread(_objectSpread({ref:provided.innerRef},provided.draggableProps),provided.dragHandleProps),{},{style:_objectSpread(_objectSpread({},provided.draggableProps.style),{},{boxShadow:snapshot.isDragging?\"0px 15px 25px #00000025\":\"none\",borderRadius:snapshot.isDragging?\"10px\":\"none\",background:snapshot.isDragging?\"#fff\":\"none\"}),children:/*#__PURE__*/_jsx(TaskSwitch,{task:task,deleteTask:deleteTask,toggleReminder:toggleReminder,editTask:editTask},task.id)}));}},uuidv4());}),provided.placeholder]}));}})});};export default Tasks;","map":{"version":3,"sources":["/Users/sherifbutt/Library/Mobile Documents/com~apple~CloudDocs/WORK/learning code/js/react/react-task-tracker-client/src/componenets/Tasks.js"],"names":["TaskSwitch","v4","uuidv4","DragDropContext","Droppable","Draggable","Tasks","tasks","setTasks","deleteTask","toggleReminder","editTask","saveTasks","saveReorderdTasks","param","destination","srcI","source","index","disI","splice","console","log","provided","_","innerRef","droppableProps","map","task","i","id","snapshot","draggableProps","dragHandleProps","style","boxShadow","isDragging","borderRadius","background","placeholder"],"mappings":"sMAAA,MAAOA,CAAAA,UAAP,KAAuB,cAAvB,CACA,OAASC,EAAE,GAAIC,CAAAA,MAAf,KAA6B,MAA7B,CACA,OAASC,eAAT,CAA0BC,SAA1B,CAAqCC,SAArC,KAAsD,qBAAtD,C,wFACA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAQR,IAPJC,CAAAA,KAOI,MAPJA,KAOI,CANJC,QAMI,MANJA,QAMI,CALJC,UAKI,MALJA,UAKI,CAJJC,cAII,MAJJA,cAII,CAHJC,QAGI,MAHJA,QAGI,CAFJC,SAEI,MAFJA,SAEI,CADJC,iBACI,MADJA,iBACI,CACJ,mBACE,KAAC,eAAD,EACE,SAAS,CAAE,mBAACC,KAAD,CAAW,CACpB,GAAIA,KAAK,CAACC,WAAV,CAAuB,CACrB,GAAMC,CAAAA,IAAI,CAAGF,KAAK,CAACG,MAAN,CAAaC,KAA1B,CACA,GAAMC,CAAAA,IAAI,CAAGL,KAAK,CAACC,WAAN,CAAkBG,KAA/B,CAEA;AACAX,KAAK,CAACa,MAAN,CAAaD,IAAb,CAAmB,CAAnB,CAAsBZ,KAAK,CAACa,MAAN,CAAaJ,IAAb,CAAmB,CAAnB,EAAsB,CAAtB,CAAtB,EACAH,iBAAiB,CAACG,IAAD,CAAOG,IAAP,CAAjB,CACAX,QAAQ,CAACD,KAAD,CAAR,CACAc,OAAO,CAACC,GAAR,CAAYf,KAAZ,EACD,CACF,CAZH,uBAcE,KAAC,SAAD,EAAW,WAAW,CAAC,aAAvB,CAAqC,IAAI,CAAC,MAA1C,UACG,kBAACgB,QAAD,CAAWC,CAAX,qBACC,yCACE,GAAG,CAAED,QAAQ,CAACE,QACd;AACA;AACA;AAJF,EAKMF,QAAQ,CAACG,cALf,gBAOGnB,KAAK,CAACoB,GAAN,CAAU,SAACC,IAAD,CAAOC,CAAP,qBACT,KAAC,SAAD,EAEE,WAAW,CAAE,aAAeD,IAAI,CAACE,EAFnC,CAGE,KAAK,CAAED,CAHT,UAKG,kBAACN,QAAD,CAAWQ,QAAX,qBACC,sDACE,GAAG,CAAER,QAAQ,CAACE,QADhB,EAEMF,QAAQ,CAACS,cAFf,EAGMT,QAAQ,CAACU,eAHf,MAIE,KAAK,gCACAV,QAAQ,CAACS,cAAT,CAAwBE,KADxB,MAEHC,SAAS,CAAEJ,QAAQ,CAACK,UAAT,CACP,yBADO,CAEP,MAJD,CAKHC,YAAY,CAAEN,QAAQ,CAACK,UAAT,CAAsB,MAAtB,CAA+B,MAL1C,CAMHE,UAAU,CAAEP,QAAQ,CAACK,UAAT,CAAsB,MAAtB,CAA+B,MANxC,EAJP,uBAaE,KAAC,UAAD,EAEE,IAAI,CAAER,IAFR,CAGE,UAAU,CAAEnB,UAHd,CAIE,cAAc,CAAEC,cAJlB,CAKE,QAAQ,CAAEC,QALZ,EACOiB,IAAI,CAACE,EADZ,CAbF,GADD,EALH,EACO5B,MAAM,EADb,CADS,EAAV,CAPH,CAsCGqB,QAAQ,CAACgB,WAtCZ,IADD,EADH,EAdF,EADF,CA6DD,CAtED,CAwEA,cAAejC,CAAAA,KAAf","sourcesContent":["import TaskSwitch from \"./TaskSwitch\";\nimport  {v4 as uuidv4}  from \"uuid\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nconst Tasks = ({\n  tasks,\n  setTasks,\n  deleteTask,\n  toggleReminder,\n  editTask,\n  saveTasks,\n  saveReorderdTasks,\n}) => {\n  return (\n    <DragDropContext\n      onDragEnd={(param) => {\n        if (param.destination) {\n          const srcI = param.source.index;\n          const disI = param.destination.index;\n\n          // tasks.splice(srcI,1,disT)\n          tasks.splice(disI, 0, tasks.splice(srcI, 1)[0]);\n          saveReorderdTasks(srcI, disI);\n          setTasks(tasks);\n          console.log(tasks);\n        }\n      }}\n    >\n      <Droppable droppableId=\"droppable-1\" type=\"TASK\">\n        {(provided, _) => (\n          <div\n            ref={provided.innerRef}\n            // style={{\n            //   backgroundColor: snapshot.isDraggingOver ? \"blue\" : \"grey\",\n            // }}\n            {...provided.droppableProps}\n          >\n            {tasks.map((task, i) => (\n              <Draggable\n                key={uuidv4()}\n                draggableId={\"draggable-\" + task.id}\n                index={i}\n              >\n                {(provided, snapshot) => (\n                  <div\n                    ref={provided.innerRef}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    style={{\n                      ...provided.draggableProps.style,\n                      boxShadow: snapshot.isDragging\n                        ? \"0px 15px 25px #00000025\"\n                        : \"none\",\n                      borderRadius: snapshot.isDragging ? \"10px\" : \"none\",\n                      background: snapshot.isDragging ? \"#fff\" : \"none\",\n                    }}\n                  >\n                    <TaskSwitch\n                      key={task.id}\n                      task={task}\n                      deleteTask={deleteTask}\n                      toggleReminder={toggleReminder}\n                      editTask={editTask}\n                    />\n                  </div>\n                )}\n              </Draggable>\n            ))}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n};\n\nexport default Tasks;\n"]},"metadata":{},"sourceType":"module"}