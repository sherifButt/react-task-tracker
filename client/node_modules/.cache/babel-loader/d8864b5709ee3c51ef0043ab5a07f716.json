{"ast":null,"code":"import _slicedToArray from\"/Users/sherifbutt/Library/Mobile Documents/com~apple~CloudDocs/WORK/learning code/js/react/react-task-tracker/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AddTask=function AddTask(_ref){var addTask=_ref.addTask,showAddTaskForm=_ref.showAddTaskForm;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),text=_useState2[0],setText=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),day=_useState4[0],setDay=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),reminder=_useState6[0],setReminder=_useState6[1];var onSubmit=function onSubmit(e){e.preventDefault();if(!text){alert(\"Please enter a Task\");return;}if(!day){alert(\"Please enter a Date\");return;}addTask({text:text,day:day,reminder:reminder});setText(\"\");setDay(\"\");setReminder(false);};return/*#__PURE__*/_jsxs(\"form\",{className:\"add-form\",style:{display:showAddTaskForm?'':'none'},onSubmit:onSubmit,method:\"post\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-control\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Task\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Add task\",value:text,onChange:function onChange(e){return setText(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-control\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Dan & Time\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Add Day & Time\",value:day,onChange:function onChange(e){return setDay(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-control form-control-check\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Set Reminder\"}),/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",value:reminder,checked:reminder,onChange:function onChange(e){return setReminder(e.currentTarget.checked);}})]}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:\"Save Task\",className:\"btn btn-block\"})]});};export default AddTask;","map":{"version":3,"sources":["/Users/sherifbutt/Library/Mobile Documents/com~apple~CloudDocs/WORK/learning code/js/react/react-task-tracker/src/componenets/AddTask.js"],"names":["useState","AddTask","addTask","showAddTaskForm","text","setText","day","setDay","reminder","setReminder","onSubmit","e","preventDefault","alert","display","target","value","currentTarget","checked"],"mappings":"gMAAA,OAASA,QAAT,KAAyB,OAAzB,C,wFAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,MAAkC,IAA/BC,CAAAA,OAA+B,MAA/BA,OAA+B,CAAtBC,eAAsB,MAAtBA,eAAsB,CAChD,cAAwBH,QAAQ,CAAC,EAAD,CAAhC,wCAAOI,IAAP,eAAaC,OAAb,eACA,eAAsBL,QAAQ,CAAC,EAAD,CAA9B,yCAAOM,GAAP,eAAYC,MAAZ,eACA,eAAgCP,QAAQ,CAAC,IAAD,CAAxC,yCAAOQ,QAAP,eAAiBC,WAAjB,eAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,CAAD,CAAO,CACtBA,CAAC,CAACC,cAAF,GACA,GAAI,CAACR,IAAL,CAAW,CACTS,KAAK,CAAC,qBAAD,CAAL,CACA,OAED,CACL,GAAI,CAACP,GAAL,CAAU,CACFO,KAAK,CAAC,qBAAD,CAAL,CACA,OACD,CACHX,OAAO,CAAC,CAAEE,IAAI,CAAJA,IAAF,CAAQE,GAAG,CAAHA,GAAR,CAAaE,QAAQ,CAARA,QAAb,CAAD,CAAP,CACAH,OAAO,CAAC,EAAD,CAAP,CACAE,MAAM,CAAC,EAAD,CAAN,CACAE,WAAW,CAAC,KAAD,CAAX,CACD,CAfD,CAiBA,mBACE,cACE,SAAS,CAAC,UADZ,CAEE,KAAK,CAAE,CAAEK,OAAO,CAAEX,eAAe,CAAC,EAAD,CAAI,MAA9B,CAFT,CAGE,QAAQ,CAAEO,QAHZ,CAIE,MAAM,CAAC,MAJT,wBAME,aAAK,SAAS,CAAC,cAAf,wBACE,+BADF,cAEE,cACE,IAAI,CAAC,MADP,CAEE,WAAW,CAAC,UAFd,CAGE,KAAK,CAAEN,IAHT,CAIE,QAAQ,CAAE,kBAACO,CAAD,QAAON,CAAAA,OAAO,CAACM,CAAC,CAACI,MAAF,CAASC,KAAV,CAAd,EAJZ,EAFF,GANF,cAeE,aAAK,SAAS,CAAC,cAAf,wBACE,qCADF,cAEE,cACE,IAAI,CAAC,MADP,CAEE,WAAW,CAAC,gBAFd,CAGE,KAAK,CAAEV,GAHT,CAIE,QAAQ,CAAE,kBAACK,CAAD,QAAOJ,CAAAA,MAAM,CAACI,CAAC,CAACI,MAAF,CAASC,KAAV,CAAb,EAJZ,EAFF,GAfF,cAwBE,aAAK,SAAS,CAAC,iCAAf,wBACE,uCADF,cAEE,cACE,IAAI,CAAC,UADP,CAEE,KAAK,CAAER,QAFT,CAGE,OAAO,CAAEA,QAHX,CAIE,QAAQ,CAAE,kBAACG,CAAD,QAAOF,CAAAA,WAAW,CAACE,CAAC,CAACM,aAAF,CAAgBC,OAAjB,CAAlB,EAJZ,EAFF,GAxBF,cAiCE,cAAO,IAAI,CAAC,QAAZ,CAAqB,KAAK,CAAC,WAA3B,CAAuC,SAAS,CAAC,eAAjD,EAjCF,GADF,CAqCD,CA3DD,CA4DA,cAAejB,CAAAA,OAAf","sourcesContent":["import { useState } from \"react\";\n\nconst AddTask = ({ addTask, showAddTaskForm }) => {\n  const [text, setText] = useState(\"\");\n  const [day, setDay] = useState(\"\");\n  const [reminder, setReminder] = useState(true);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (!text) {\n      alert(\"Please enter a Task\");\n      return;\n      \n    }\nif (!day) {\n        alert(\"Please enter a Date\");\n        return;\n      }\n    addTask({ text, day, reminder });\n    setText(\"\");\n    setDay(\"\");\n    setReminder(false);\n  };\n\n  return (\n    <form\n      className=\"add-form\"\n      style={{ display: showAddTaskForm?'':'none'}}\n      onSubmit={onSubmit}\n      method=\"post\"\n    >\n      <div className=\"form-control\">\n        <label>Task</label>\n        <input\n          type=\"text\"\n          placeholder=\"Add task\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n        />\n      </div>\n      <div className=\"form-control\">\n        <label>Dan & Time</label>\n        <input\n          type=\"text\"\n          placeholder=\"Add Day & Time\"\n          value={day}\n          onChange={(e) => setDay(e.target.value)}\n        />\n      </div>\n      <div className=\"form-control form-control-check\">\n        <label>Set Reminder</label>\n        <input\n          type=\"checkbox\"\n          value={reminder}\n          checked={reminder}\n          onChange={(e) => setReminder(e.currentTarget.checked)}\n        />\n      </div>\n      <input type=\"submit\" value=\"Save Task\" className=\"btn btn-block\" />\n    </form>\n  );\n};\nexport default AddTask;\n"]},"metadata":{},"sourceType":"module"}