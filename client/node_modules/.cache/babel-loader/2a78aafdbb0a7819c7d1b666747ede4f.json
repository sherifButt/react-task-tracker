{"ast":null,"code":"/**\n * Module dependencies.\n */\nvar debug = require('debug')('express-urlrewrite');\n\nvar toRegexp = require('path-to-regexp');\n\nvar URL = require('url');\n/**\n * Expose `expose`.\n */\n\n\nmodule.exports = rewrite;\n/**\n * Rewrite `src` to `dst`.\n *\n * @param {String|RegExp} src\n * @param {String} dst\n * @return {Function}\n * @api public\n */\n\nfunction rewrite(src, dst) {\n  var keys = [],\n      re,\n      map;\n\n  if (dst) {\n    re = toRegexp(src, keys);\n    map = toMap(keys);\n    debug('rewrite %s -> %s    %s', src, dst, re);\n  } else {\n    debug('rewrite current route -> %s', src);\n  }\n\n  return function (req, res, next) {\n    var orig = req.url;\n    var m;\n\n    if (dst) {\n      m = re.exec(orig);\n\n      if (!m) {\n        return next();\n      }\n    }\n\n    req.url = req.originalUrl = (dst || src).replace(/\\$(\\d+)|(?::(\\w+))/g, function (_, n, name) {\n      if (name) {\n        if (m) return m[map[name].index + 1];else return req.params[name];\n      } else if (m) {\n        return m[n];\n      } else {\n        return req.params[n];\n      }\n    });\n    debug('rewrite %s -> %s', orig, req.url);\n\n    if (req.url.indexOf('?') > 0) {\n      req.query = URL.parse(req.url, true).query;\n      debug('rewrite updated new query', req.query);\n    }\n\n    if (dst) next();else next('route');\n  };\n}\n/**\n * Turn params array into a map for quick lookup.\n *\n * @param {Array} params\n * @return {Object}\n * @api private\n */\n\n\nfunction toMap(params) {\n  var map = {};\n  params.forEach(function (param, i) {\n    param.index = i;\n    map[param.name] = param;\n  });\n  return map;\n}","map":{"version":3,"sources":["/Users/sherifbutt/Library/Mobile Documents/com~apple~CloudDocs/WORK/learning code/js/react/react-task-tracker/node_modules/express-urlrewrite/index.js"],"names":["debug","require","toRegexp","URL","module","exports","rewrite","src","dst","keys","re","map","toMap","req","res","next","orig","url","m","exec","originalUrl","replace","_","n","name","index","params","indexOf","query","parse","forEach","param","i"],"mappings":"AACA;AACA;AACA;AAEC,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiB,oBAAjB,CAAZ;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,gBAAD,CAAtB;;AACA,IAAIE,GAAG,GAAGF,OAAO,CAAC,KAAD,CAAjB;AAED;AACA;AACA;;;AAEAG,MAAM,CAACC,OAAP,GAAiBC,OAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,OAAT,CAAiBC,GAAjB,EAAsBC,GAAtB,EAA2B;AACzB,MAAIC,IAAI,GAAG,EAAX;AAAA,MAAeC,EAAf;AAAA,MAAmBC,GAAnB;;AAEA,MAAIH,GAAJ,EAAS;AACPE,IAAAA,EAAE,GAAGR,QAAQ,CAACK,GAAD,EAAME,IAAN,CAAb;AACAE,IAAAA,GAAG,GAAGC,KAAK,CAACH,IAAD,CAAX;AACAT,IAAAA,KAAK,CAAC,wBAAD,EAA2BO,GAA3B,EAAgCC,GAAhC,EAAqCE,EAArC,CAAL;AACD,GAJD,MAIO;AACLV,IAAAA,KAAK,CAAC,6BAAD,EAAgCO,GAAhC,CAAL;AACD;;AAED,SAAO,UAASM,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC9B,QAAIC,IAAI,GAAGH,GAAG,CAACI,GAAf;AACA,QAAIC,CAAJ;;AACA,QAAIV,GAAJ,EAAS;AACPU,MAAAA,CAAC,GAAGR,EAAE,CAACS,IAAH,CAAQH,IAAR,CAAJ;;AACA,UAAI,CAACE,CAAL,EAAQ;AACN,eAAOH,IAAI,EAAX;AACD;AACF;;AACDF,IAAAA,GAAG,CAACI,GAAJ,GAAUJ,GAAG,CAACO,WAAJ,GAAkB,CAACZ,GAAG,IAAID,GAAR,EAAac,OAAb,CAAqB,qBAArB,EAA4C,UAASC,CAAT,EAAYC,CAAZ,EAAeC,IAAf,EAAqB;AAC3F,UAAIA,IAAJ,EAAU;AACR,YAAIN,CAAJ,EAAO,OAAOA,CAAC,CAACP,GAAG,CAACa,IAAD,CAAH,CAAUC,KAAV,GAAkB,CAAnB,CAAR,CAAP,KACK,OAAOZ,GAAG,CAACa,MAAJ,CAAWF,IAAX,CAAP;AACN,OAHD,MAGO,IAAIN,CAAJ,EAAO;AACZ,eAAOA,CAAC,CAACK,CAAD,CAAR;AACD,OAFM,MAEA;AACL,eAAOV,GAAG,CAACa,MAAJ,CAAWH,CAAX,CAAP;AACD;AACF,KAT2B,CAA5B;AAUAvB,IAAAA,KAAK,CAAC,kBAAD,EAAqBgB,IAArB,EAA2BH,GAAG,CAACI,GAA/B,CAAL;;AACA,QAAIJ,GAAG,CAACI,GAAJ,CAAQU,OAAR,CAAgB,GAAhB,IAAuB,CAA3B,EAA8B;AAC5Bd,MAAAA,GAAG,CAACe,KAAJ,GAAYzB,GAAG,CAAC0B,KAAJ,CAAUhB,GAAG,CAACI,GAAd,EAAmB,IAAnB,EAAyBW,KAArC;AACA5B,MAAAA,KAAK,CAAC,2BAAD,EAA8Ba,GAAG,CAACe,KAAlC,CAAL;AACD;;AACD,QAAIpB,GAAJ,EAASO,IAAI,GAAb,KACKA,IAAI,CAAC,OAAD,CAAJ;AACN,GA1BD;AA2BD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASH,KAAT,CAAec,MAAf,EAAuB;AACrB,MAAIf,GAAG,GAAG,EAAV;AAEAe,EAAAA,MAAM,CAACI,OAAP,CAAe,UAASC,KAAT,EAAgBC,CAAhB,EAAmB;AAChCD,IAAAA,KAAK,CAACN,KAAN,GAAcO,CAAd;AACArB,IAAAA,GAAG,CAACoB,KAAK,CAACP,IAAP,CAAH,GAAkBO,KAAlB;AACD,GAHD;AAKA,SAAOpB,GAAP;AACD","sourcesContent":["\n/**\n * Module dependencies.\n */\n\n var debug = require('debug')('express-urlrewrite');\n var toRegexp = require('path-to-regexp');\n var URL = require('url');\n\n/**\n * Expose `expose`.\n */\n\nmodule.exports = rewrite;\n\n/**\n * Rewrite `src` to `dst`.\n *\n * @param {String|RegExp} src\n * @param {String} dst\n * @return {Function}\n * @api public\n */\n\nfunction rewrite(src, dst) {\n  var keys = [], re, map;\n\n  if (dst) {\n    re = toRegexp(src, keys);\n    map = toMap(keys);\n    debug('rewrite %s -> %s    %s', src, dst, re);\n  } else {\n    debug('rewrite current route -> %s', src);\n  }\n\n  return function(req, res, next) {\n    var orig = req.url;\n    var m;\n    if (dst) {\n      m = re.exec(orig);\n      if (!m) {\n        return next();\n      }\n    }\n    req.url = req.originalUrl = (dst || src).replace(/\\$(\\d+)|(?::(\\w+))/g, function(_, n, name) {\n      if (name) {\n        if (m) return m[map[name].index + 1];\n        else return req.params[name];\n      } else if (m) {\n        return m[n];\n      } else {\n        return req.params[n];\n      }\n    });\n    debug('rewrite %s -> %s', orig, req.url);\n    if (req.url.indexOf('?') > 0) {\n      req.query = URL.parse(req.url, true).query;\n      debug('rewrite updated new query', req.query);\n    }\n    if (dst) next();\n    else next('route');\n  }\n}\n\n/**\n * Turn params array into a map for quick lookup.\n *\n * @param {Array} params\n * @return {Object}\n * @api private\n */\n\nfunction toMap(params) {\n  var map = {};\n\n  params.forEach(function(param, i) {\n    param.index = i;\n    map[param.name] = param;\n  });\n\n  return map;\n}\n"]},"metadata":{},"sourceType":"script"}