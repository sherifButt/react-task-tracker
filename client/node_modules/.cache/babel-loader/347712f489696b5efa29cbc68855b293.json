{"ast":null,"code":"var _jsxFileName = \"/Users/sherifbutt/Library/Mobile Documents/com~apple~CloudDocs/WORK/learning code/js/react/react-task-tracker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { Bro } from \"react-router-dom\";\nimport Header from \"./componenets/Header\";\nimport Tasks from \"./componenets/Tasks\";\nimport AddTask from \"./componenets/AddTask\";\nimport Footer from \"./componenets/Footer\";\nimport About from \"./componenets/About\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  const [showAddTaskForm, setShowAddTaskForm] = useState(false);\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n\n    getTasks();\n  }, []); //REST\n  // fetch Tasks\n\n  const fetchTasks = async () => {\n    const res = await fetch(\"http://localhost:8000/tasks\");\n    const data = await res.json();\n    return data;\n  }; // fetch Task\n\n\n  const fetchTask = async id => {\n    const res = await fetch(`http://localhost:8000/tasks/${id}`, {\n      method: \"GET\"\n    });\n    const data = await res.json();\n    return data;\n  }; // Update data\n\n\n  const updateData = async (id, data) => {\n    await fetch(`http://localhost:8000/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n  }; // Delete Task\n\n\n  const deleteTask = async id => {\n    await fetch(`http://localhost:8000/tasks/${id}`, {\n      method: 'DELETE'\n    });\n    setTasks(tasks.filter(task => task.id !== id));\n  }; // Toggle reminder\n\n\n  const toggleReminder = async id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n    const taskToChange = await fetchTask(id);\n    const changedTask = await { ...taskToChange,\n      reminder: !taskToChange.reminder\n    };\n    updateData(id, changedTask);\n  }; // Add Task\n\n\n  const addTask = async task => {\n    const res = await fetch(\"http://localhost:8000/tasks\", {\n      method: \"POST\",\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    });\n    const data = await res.json();\n    setTasks([...tasks, data]); // const newTask = { id: tasks.length + 1, ...task };\n    // setTasks([...tasks, newTask]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      showAddTaskForm: showAddTaskForm,\n      toggleAddTaskForm: () => setShowAddTaskForm(!showAddTaskForm)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), showAddTaskForm && /*#__PURE__*/_jsxDEV(AddTask, {\n      addTask: addTask,\n      showAddTaskForm: showAddTaskForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      deleteTask: deleteTask,\n      toggleReminder: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task\",\n      style: {\n        backgroundColor: \"white\"\n      },\n      children: \"Sorry.. No tasks to show!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ohuU7wK2WB9wRWCpYgjhUwcyLzY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sherifbutt/Library/Mobile Documents/com~apple~CloudDocs/WORK/learning code/js/react/react-task-tracker/src/App.js"],"names":["useState","useEffect","Bro","Header","Tasks","AddTask","Footer","About","App","tasks","setTasks","showAddTaskForm","setShowAddTaskForm","getTasks","tasksFromServer","fetchTasks","res","fetch","data","json","fetchTask","id","method","updateData","headers","body","JSON","stringify","deleteTask","filter","task","toggleReminder","map","reminder","taskToChange","changedTask","addTask","length","backgroundColor"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Bro } from \"react-router-dom\";\n\nimport Header from \"./componenets/Header\";\nimport Tasks from \"./componenets/Tasks\";\nimport AddTask from \"./componenets/AddTask\";\nimport Footer from \"./componenets/Footer\";\nimport About from \"./componenets/About\"\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [showAddTaskForm, setShowAddTaskForm] = useState(false);\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n    getTasks();\n  }, []);\n\n  //REST\n  // fetch Tasks\n  const fetchTasks = async () => {\n    const res = await fetch(\"http://localhost:8000/tasks\");\n    const data = await res.json();\n\n    return data;\n  };\n\n  // fetch Task\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:8000/tasks/${id}`, {\n      method: \"GET\",\n    })\n    const data = await res.json();\n    return data\n  }\n\n  // Update data\n  const updateData = async (id, data) => {\n    await fetch(`http://localhost:8000/tasks/${ id }`, {\n      method: 'PUT',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body:JSON.stringify(data)\n    })\n  }\n\n  // Delete Task\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:8000/tasks/${id}`, { method: 'DELETE' });\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  // Toggle reminder\n  const toggleReminder = async (id) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: !task.reminder } : task\n      )\n    );\n       \n    \n    const taskToChange = await fetchTask(id);\n\n    const changedTask = await {\n      ...taskToChange,\n      reminder: !taskToChange.reminder,\n    };\n     \n    updateData(id,changedTask)\n    \n  };\n\n  // Add Task\n  const addTask = async (task) => {\n    const res = await fetch(\"http://localhost:8000/tasks\", {\n      method: \"POST\",\n      headers: {\n        'content-type':'application/json'\n      },\n      body:JSON.stringify(task)\n    });\n    const data = await res.json()\n    setTasks([...tasks,data])\n\n    // const newTask = { id: tasks.length + 1, ...task };\n    // setTasks([...tasks, newTask]);\n  };\n\n  return (\n    <div className=\"container\">\n      <Header\n        showAddTaskForm={showAddTaskForm}\n        toggleAddTaskForm={() => setShowAddTaskForm(!showAddTaskForm)}\n      />\n      {showAddTaskForm && (\n        <AddTask addTask={addTask} showAddTaskForm={showAddTaskForm} />\n      )}\n\n      {tasks.length > 0 ? (\n        <Tasks\n          tasks={tasks}\n          deleteTask={deleteTask}\n          toggleReminder={toggleReminder}\n        />\n      ) : (\n        <div className=\"task\" style={{ backgroundColor: \"white\" }}>\n          Sorry.. No tasks to show!\n        </div>\n      )}\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}