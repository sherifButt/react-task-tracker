{"ast":null,"code":"import _toConsumableArray from\"/Users/sherifbutt/Library/Mobile Documents/com~apple~CloudDocs/WORK/learning code/js/react/react-task-tracker/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/sherifbutt/Library/Mobile Documents/com~apple~CloudDocs/WORK/learning code/js/react/react-task-tracker/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/Users/sherifbutt/Library/Mobile Documents/com~apple~CloudDocs/WORK/learning code/js/react/react-task-tracker/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/sherifbutt/Library/Mobile Documents/com~apple~CloudDocs/WORK/learning code/js/react/react-task-tracker/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/sherifbutt/Library/Mobile Documents/com~apple~CloudDocs/WORK/learning code/js/react/react-task-tracker/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from\"react\";import{BrowserRouter as Router,Route}from\"react-router-dom\";import Header from\"./componenets/Header\";import Tasks from\"./componenets/Tasks\";import AddTask from\"./componenets/AddTask\";import Footer from\"./componenets/Footer\";import About from\"./componenets/About\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),tasks=_useState2[0],setTasks=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),showAddTaskForm=_useState4[0],setShowAddTaskForm=_useState4[1];useEffect(function(){var getTasks=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var tasksFromServer;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetchTasks();case 2:tasksFromServer=_context.sent;setTasks(tasksFromServer);case 4:case\"end\":return _context.stop();}}},_callee);}));return function getTasks(){return _ref.apply(this,arguments);};}();getTasks();},[]);//REST\n// fetch Tasks\nvar fetchTasks=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var res,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return fetch(\"http://localhost:5000/tasks\",{method:\"GET\"});case 3:res=_context2.sent;_context2.next=6;return res.json();case 6:data=_context2.sent;return _context2.abrupt(\"return\",data);case 10:_context2.prev=10;_context2.t0=_context2[\"catch\"](0);console.error(\"Error featch tasks: \",_context2.t0);case 13:case\"end\":return _context2.stop();}}},_callee2,null,[[0,10]]);}));return function fetchTasks(){return _ref2.apply(this,arguments);};}();// fetch one Task\nvar fetchTask=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id){var res,data;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return fetch(\"http://localhost:5000/tasks/\".concat(id),{method:\"GET\"});case 3:res=_context3.sent;_context3.next=6;return res.json();case 6:data=_context3.sent;return _context3.abrupt(\"return\",data);case 10:_context3.prev=10;_context3.t0=_context3[\"catch\"](0);console.error(\"Error featch task [\".concat(id,\"]:\"),_context3.t0);case 13:case\"end\":return _context3.stop();}}},_callee3,null,[[0,10]]);}));return function fetchTask(_x){return _ref3.apply(this,arguments);};}();// Update data\nvar updateData=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(id,data){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return fetch(\"http://localhost:5000/tasks/\".concat(id),{method:\"PUT\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(data)});case 2:case\"end\":return _context4.stop();}}},_callee4);}));return function updateData(_x2,_x3){return _ref4.apply(this,arguments);};}();// Delete Task\nvar deleteTask=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(id){return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return fetch(\"http://localhost:5000/tasks/\".concat(id),{method:\"DELETE\"});case 2:setTasks(tasks.filter(function(task){return task.id!==id;}));case 3:case\"end\":return _context5.stop();}}},_callee5);}));return function deleteTask(_x4){return _ref5.apply(this,arguments);};}();// Post all tasks\nvar saveTasks=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(tasks){return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return fetch(\"http://localhost:5000/\",{method:\"POST\",headers:{\"Content-type\":\"application/json\"},body:JSON.stringify(tasks)});case 2:case\"end\":return _context6.stop();}}},_callee6);}));return function saveTasks(_x5){return _ref6.apply(this,arguments);};}();// Save reorderd Tasks to Server\nvar saveReorderdTasks=/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(srcI,disI){return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.next=2;return fetch(\"http://localhost:5000/tasks/?srcI=\".concat(srcI,\"&disI=\").concat(disI),{method:\"POST\",headers:{\"Content-Type\":\"application/json\"}});case 2:case\"end\":return _context7.stop();}}},_callee7);}));return function saveReorderdTasks(_x6,_x7){return _ref7.apply(this,arguments);};}();// const saveReorderdTasks = async (_tasks,srcI,disI) => {\n//   await fetch(\"http://localhost:5000/reordertasks/\", {\n//     method: \"POST\",\n//     headers: {\n//       \"Content-Type\": \"application/json\"\n//     },\n//     body: JSON.stringify({tasks:_tasks})\n//   });\n//   setTasks(_tasks);\n// }\n// Toggle reminder\nvar toggleReminder=/*#__PURE__*/function(){var _ref8=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee8(id){var taskToChange,changedTask;return _regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:setTasks(tasks.map(function(task){return task.id===id?_objectSpread(_objectSpread({},task),{},{reminder:!task.reminder}):task;}));_context8.next=3;return fetchTask(id);case 3:taskToChange=_context8.sent;_context8.next=6;return _objectSpread(_objectSpread({},taskToChange),{},{reminder:!taskToChange.reminder});case 6:changedTask=_context8.sent;updateData(id,changedTask);case 8:case\"end\":return _context8.stop();}}},_callee8);}));return function toggleReminder(_x8){return _ref8.apply(this,arguments);};}();// Add Task\nvar addTask=/*#__PURE__*/function(){var _ref9=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee9(task){var res,data;return _regeneratorRuntime.wrap(function _callee9$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:_context9.next=2;return fetch(\"http://localhost:5000/tasks/\",{method:\"POST\",headers:{\"content-type\":\"application/json\"},body:JSON.stringify(task)});case 2:res=_context9.sent;_context9.next=5;return res.json();case 5:data=_context9.sent;setTasks([].concat(_toConsumableArray(tasks),[data]));// const newTask = { id: tasks.length + 1, ...task };\n// setTasks([...tasks, newTask]);\ncase 7:case\"end\":return _context9.stop();}}},_callee9);}));return function addTask(_x9){return _ref9.apply(this,arguments);};}();//Edit Task text\nvar editTask=/*#__PURE__*/function(){var _ref10=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee10(payload){var tasks,newTasks;return _regeneratorRuntime.wrap(function _callee10$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:_context10.next=2;return fetchTasks();case 2:tasks=_context10.sent;// Fetch oldTaskInfo\n//const oldTaskInfo = await fetchTask(payload.id)//\n//  console.log('-->',payload,oldTaskInfo);\n// Replace oldTaskInfo with newTaskInfo\nnewTasks=tasks.map(function(task){return payload.id===task.id?_objectSpread(_objectSpread({},task),{},{text:payload.text}):task;});setTasks(newTasks);console.log(newTasks);// Update Tasks state with newTaskInfo\n// PUT newTaskInfo to server\nupdateData(payload.id,payload);case 7:case\"end\":return _context10.stop();}}},_callee10);}));return function editTask(_x10){return _ref10.apply(this,arguments);};}();return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(Header,{showAddTaskForm:showAddTaskForm,toggleAddTaskForm:function toggleAddTaskForm(){return setShowAddTaskForm(!showAddTaskForm);}}),/*#__PURE__*/_jsx(Route,{path:\"/\",exact:true,render:function render(props){return/*#__PURE__*/_jsxs(_Fragment,{children:[showAddTaskForm&&/*#__PURE__*/_jsx(AddTask,{addTask:addTask,showAddTaskForm:showAddTaskForm}),tasks.length>0?/*#__PURE__*/_jsx(Tasks,{tasks:tasks,setTasks:setTasks,deleteTask:deleteTask,toggleReminder:toggleReminder,editTask:editTask,saveTasks:saveTasks,saveReorderdTasks:saveReorderdTasks}):/*#__PURE__*/_jsx(\"div\",{className:\"task\",style:{backgroundColor:\"white\"},children:\"Sorry.. No tasks to show!\"})]});}}),/*#__PURE__*/_jsx(Route,{path:\"/about\",component:About}),/*#__PURE__*/_jsx(Footer,{})]})});}export default App;","map":{"version":3,"sources":["/Users/sherifbutt/Library/Mobile Documents/com~apple~CloudDocs/WORK/learning code/js/react/react-task-tracker/src/App.js"],"names":["useState","useEffect","BrowserRouter","Router","Route","Header","Tasks","AddTask","Footer","About","App","props","tasks","setTasks","showAddTaskForm","setShowAddTaskForm","getTasks","fetchTasks","tasksFromServer","fetch","method","res","json","data","console","error","fetchTask","id","updateData","headers","body","JSON","stringify","deleteTask","filter","task","saveTasks","saveReorderdTasks","srcI","disI","toggleReminder","map","reminder","taskToChange","changedTask","addTask","editTask","payload","newTasks","text","log","length","backgroundColor"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport Header from \"./componenets/Header\";\nimport Tasks from \"./componenets/Tasks\";\nimport AddTask from \"./componenets/AddTask\";\nimport Footer from \"./componenets/Footer\";\nimport About from \"./componenets/About\";\n\nfunction App(props) {\n  const [tasks, setTasks] = useState([]);\n  const [showAddTaskForm, setShowAddTaskForm] = useState(false);\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n    getTasks();\n  }, []);\n\n  //REST\n  // fetch Tasks\n  const fetchTasks = async () => {\n    try {\n      const res = await fetch(\"http://localhost:5000/tasks\", { method: \"GET\" });\n      const data = await res.json();\n      return data;\n    } catch (err) {\n      console.error(\"Error featch tasks: \", err);\n    }\n  };\n\n  // fetch one Task\n  const fetchTask = async (id) => {\n    try {\n      const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n        method: \"GET\",\n      });\n      const data = await res.json();\n      return data;\n    } catch (err) {\n      console.error(`Error featch task [${id}]:`, err);\n    }\n  };\n\n  // Update data\n  const updateData = async (id, data) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n  };\n\n  // Delete Task\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, { method: \"DELETE\" });\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  // Post all tasks\n  const saveTasks = async (tasks) => {\n    await fetch(\"http://localhost:5000/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(tasks),\n    });\n  };\n\n  // Save reorderd Tasks to Server\n  const saveReorderdTasks = async (srcI, disI) => {\n    await fetch(`http://localhost:5000/tasks/?srcI=${srcI}&disI=${disI}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n  };\n  // const saveReorderdTasks = async (_tasks,srcI,disI) => {\n  //   await fetch(\"http://localhost:5000/reordertasks/\", {\n  //     method: \"POST\",\n  //     headers: {\n  //       \"Content-Type\": \"application/json\"\n  //     },\n  //     body: JSON.stringify({tasks:_tasks})\n  //   });\n  //   setTasks(_tasks);\n  // }\n\n  // Toggle reminder\n  const toggleReminder = async (id) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: !task.reminder } : task\n      )\n    );\n\n    const taskToChange = await fetchTask(id);\n    const changedTask = await {\n      ...taskToChange,\n      reminder: !taskToChange.reminder,\n    };\n\n    updateData(id, changedTask);\n  };\n\n  // Add Task\n  const addTask = async (task) => {\n    const res = await fetch(\"http://localhost:5000/tasks/\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify(task),\n    });\n    const data = await res.json();\n    setTasks([...tasks, data]);\n\n    // const newTask = { id: tasks.length + 1, ...task };\n    // setTasks([...tasks, newTask]);\n  };\n\n  //Edit Task text\n  const editTask = async (payload) => {\n    // Fetch tasks\n    const tasks = await fetchTasks();\n    // Fetch oldTaskInfo\n    //const oldTaskInfo = await fetchTask(payload.id)//\n    //  console.log('-->',payload,oldTaskInfo);\n    // Replace oldTaskInfo with newTaskInfo\n\n    const newTasks = tasks.map((task) =>\n      payload.id === task.id ? { ...task, text: payload.text } : task\n    );\n    setTasks(newTasks);\n    console.log(newTasks);\n\n    // Update Tasks state with newTaskInfo\n    // PUT newTaskInfo to server\n    updateData(payload.id, payload);\n  };\n\n  return (\n    <Router>\n      <div className=\"container\">\n        <Header\n          showAddTaskForm={showAddTaskForm}\n          toggleAddTaskForm={() => setShowAddTaskForm(!showAddTaskForm)}\n        />\n\n        <Route\n          path=\"/\"\n          exact\n          render={(props) => (\n            <>\n              {showAddTaskForm && (\n                <AddTask addTask={addTask} showAddTaskForm={showAddTaskForm} />\n              )}\n\n              {tasks.length > 0 ? (\n                <Tasks\n                  tasks={tasks}\n                  setTasks={setTasks}\n                  deleteTask={deleteTask}\n                  toggleReminder={toggleReminder}\n                  editTask={editTask}\n                  saveTasks={saveTasks}\n                  saveReorderdTasks={saveReorderdTasks}\n                />\n              ) : (\n                <div className=\"task\" style={{ backgroundColor: \"white\" }}>\n                  Sorry.. No tasks to show!\n                </div>\n              )}\n            </>\n          )}\n        />\n        <Route path=\"/about\" component={About} />\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}