{"ast":null,"code":"var _jsxFileName = \"/Users/sherifbutt/Library/Mobile Documents/com~apple~CloudDocs/WORK/learning code/js/react/react-task-tracker/src/componenets/Tasks.js\";\nimport TaskSwitch from \"./TaskSwitch\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tasks = ({\n  tasks,\n  deleteTask,\n  toggleReminder,\n  editTask\n}) => {\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: (...props) => console.log(props),\n    children: /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: \"droppable-1\",\n      type: \"PERSON\",\n      children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: provided.innerRef,\n        style: {\n          backgroundColor: snapshot.isDraggingOver ? \"blue\" : \"grey\"\n        },\n        ...provided.droppableProps,\n        children: [tasks.map((task, i) => /*#__PURE__*/_jsxDEV(TaskSwitch, {\n          task: task,\n          deleteTask: deleteTask,\n          toggleReminder: toggleReminder,\n          editTask: editTask\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 15\n        }, this)), provided.placeholder]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["/Users/sherifbutt/Library/Mobile Documents/com~apple~CloudDocs/WORK/learning code/js/react/react-task-tracker/src/componenets/Tasks.js"],"names":["TaskSwitch","DragDropContext","Droppable","Draggable","Tasks","tasks","deleteTask","toggleReminder","editTask","props","console","log","provided","snapshot","innerRef","backgroundColor","isDraggingOver","droppableProps","map","task","i","id","placeholder"],"mappings":";AAAA,OAAOA,UAAP,MAAuB,cAAvB;AACA,SAASC,eAAT,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,qBAAtD;;;AACA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,UAAT;AAAqBC,EAAAA,cAArB;AAAqCC,EAAAA;AAArC,CAAD,KAAqD;AACjE,sBACE,QAAC,eAAD;AAAiB,IAAA,SAAS,EAAE,CAAC,GAAGC,KAAJ,KAAcC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAA1C;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,WAAW,EAAC,aAAvB;AAAqC,MAAA,IAAI,EAAC,QAA1C;AAAA,gBACG,CAACG,QAAD,EAAWC,QAAX,kBACC;AACE,QAAA,GAAG,EAAED,QAAQ,CAACE,QADhB;AAEE,QAAA,KAAK,EAAE;AACLC,UAAAA,eAAe,EAAEF,QAAQ,CAACG,cAAT,GAA0B,MAA1B,GAAmC;AAD/C,SAFT;AAAA,WAKMJ,QAAQ,CAACK,cALf;AAAA,mBAOGZ,KAAK,CAACa,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,kBACT,QAAC,UAAD;AAEE,UAAA,IAAI,EAAED,IAFR;AAGE,UAAA,UAAU,EAAEb,UAHd;AAIE,UAAA,cAAc,EAAEC,cAJlB;AAKE,UAAA,QAAQ,EAAEC;AALZ,WACOW,IAAI,CAACE,EADZ;AAAA;AAAA;AAAA;AAAA,gBADD,CAPH,EAgBGT,QAAQ,CAACU,WAhBZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CA3BD;;KAAMlB,K;AA6BN,eAAeA,KAAf","sourcesContent":["import TaskSwitch from \"./TaskSwitch\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nconst Tasks = ({ tasks, deleteTask, toggleReminder, editTask }) => {\n  return (\n    <DragDropContext onDragEnd={(...props) => console.log(props)}>\n      <Droppable droppableId=\"droppable-1\" type=\"PERSON\">\n        {(provided, snapshot) => (\n          <div\n            ref={provided.innerRef}\n            style={{\n              backgroundColor: snapshot.isDraggingOver ? \"blue\" : \"grey\",\n            }}\n            {...provided.droppableProps}\n          >\n            {tasks.map((task, i) => (\n              <TaskSwitch\n                key={task.id}\n                task={task}\n                deleteTask={deleteTask}\n                toggleReminder={toggleReminder}\n                editTask={editTask}\n              />\n            ))}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n};\n\nexport default Tasks;\n"]},"metadata":{},"sourceType":"module"}