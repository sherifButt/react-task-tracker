{"ast":null,"code":"var _jsxFileName = \"/Users/sherifbutt/Library/Mobile Documents/com~apple~CloudDocs/WORK/learning code/js/react/react-task-tracker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from \"./componenets/Header\";\nimport Tasks from \"./componenets/Tasks\";\nimport AddTask from \"./componenets/AddTask\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  const [showAddTaskForm, setShowAddTaskForm] = useState(false);\n  useEffect(() => {\n    const fetchTasks = async () => {\n      const res = await fetch('http://localhost:8080/tasks');\n    };\n  }); // Delete Task\n\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  }; // Toggle reminder\n\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  }; // Add Task\n\n\n  const addTask = task => {\n    const newTask = {\n      id: tasks.length + 1,\n      ...task\n    };\n    setTasks([...tasks, newTask]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      showAddTaskForm: showAddTaskForm,\n      toggleAddTaskForm: () => setShowAddTaskForm(!showAddTaskForm)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), showAddTaskForm && /*#__PURE__*/_jsxDEV(AddTask, {\n      addTask: addTask,\n      showAddTaskForm: showAddTaskForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      deleteTask: deleteTask,\n      toggleReminder: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task\",\n      style: {\n        backgroundColor: \"white\"\n      },\n      children: \"Sorry.. No tasks to show!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ohuU7wK2WB9wRWCpYgjhUwcyLzY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sherifbutt/Library/Mobile Documents/com~apple~CloudDocs/WORK/learning code/js/react/react-task-tracker/src/App.js"],"names":["Header","Tasks","AddTask","useState","useEffect","App","tasks","setTasks","showAddTaskForm","setShowAddTaskForm","fetchTasks","res","fetch","deleteTask","id","filter","task","toggleReminder","map","reminder","addTask","newTask","length","backgroundColor"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,QAAT,EAAkBC,SAAlB,QAAmC,OAAnC;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,eAAD,EAAkBC,kBAAlB,IAAwCN,QAAQ,CAAC,KAAD,CAAtD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,UAAU,GAAG,YAAY;AAC/B,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAAvB;AACD,KAFC;AAGH,GAJU,CAAT,CAJa,CAUb;;AACA,QAAMC,UAAU,GAAIC,EAAD,IAAQ;AACzBP,IAAAA,QAAQ,CAACD,KAAK,CAACS,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACF,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACD,GAFD,CAXa,CAeb;;;AACA,QAAMG,cAAc,GAAIH,EAAD,IAAQ;AAC7BP,IAAAA,QAAQ,CACND,KAAK,CAACY,GAAN,CAAWF,IAAD,IACRA,IAAI,CAACF,EAAL,KAAYA,EAAZ,GAAiB,EAAE,GAAGE,IAAL;AAAWG,MAAAA,QAAQ,EAAE,CAACH,IAAI,CAACG;AAA3B,KAAjB,GAAyDH,IAD3D,CADM,CAAR;AAKD,GAND,CAhBa,CAwBb;;;AACA,QAAMI,OAAO,GAAIJ,IAAD,IAAU;AACxB,UAAMK,OAAO,GAAG;AAAEP,MAAAA,EAAE,EAAER,KAAK,CAACgB,MAAN,GAAe,CAArB;AAAwB,SAAGN;AAA3B,KAAhB;AACAT,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWe,OAAX,CAAD,CAAR;AACD,GAHD;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,eAAe,EAAEb,eADnB;AAEE,MAAA,iBAAiB,EAAE,MAAMC,kBAAkB,CAAC,CAACD,eAAF;AAF7C;AAAA;AAAA;AAAA;AAAA,YADF,EAKGA,eAAe,iBACd,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEY,OAAlB;AAA2B,MAAA,eAAe,EAAEZ;AAA5C;AAAA;AAAA;AAAA;AAAA,YANJ,EASGF,KAAK,CAACgB,MAAN,GAAe,CAAf,gBACC,QAAC,KAAD;AACE,MAAA,KAAK,EAAEhB,KADT;AAEE,MAAA,UAAU,EAAEO,UAFd;AAGE,MAAA,cAAc,EAAEI;AAHlB;AAAA;AAAA;AAAA;AAAA,YADD,gBAOC;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,KAAK,EAAE;AAAEM,QAAAA,eAAe,EAAE;AAAnB,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GAvDQlB,G;;KAAAA,G;AAyDT,eAAeA,GAAf","sourcesContent":["import Header from \"./componenets/Header\";\nimport Tasks from \"./componenets/Tasks\";\nimport AddTask from \"./componenets/AddTask\";\nimport { useState,useEffect } from \"react\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [showAddTaskForm, setShowAddTaskForm] = useState(false);\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n    const res = await fetch('http://localhost:8080/tasks')\n  }\n})\n\n  // Delete Task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  // Toggle reminder\n  const toggleReminder = (id) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: !task.reminder } : task\n      )\n    );\n  };\n\n  // Add Task\n  const addTask = (task) => {\n    const newTask = { id: tasks.length + 1, ...task };\n    setTasks([...tasks, newTask]);\n  };\n\n  \n\n  return (\n    <div className=\"container\">\n      <Header\n        showAddTaskForm={showAddTaskForm}\n        toggleAddTaskForm={() => setShowAddTaskForm(!showAddTaskForm)}\n      />\n      {showAddTaskForm && (\n        <AddTask addTask={addTask} showAddTaskForm={showAddTaskForm} />\n      )}\n\n      {tasks.length > 0 ? (\n        <Tasks\n          tasks={tasks}\n          deleteTask={deleteTask}\n          toggleReminder={toggleReminder}\n        />\n      ) : (\n        <div className=\"task\" style={{ backgroundColor: \"white\" }}>\n          Sorry.. No tasks to show!\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}